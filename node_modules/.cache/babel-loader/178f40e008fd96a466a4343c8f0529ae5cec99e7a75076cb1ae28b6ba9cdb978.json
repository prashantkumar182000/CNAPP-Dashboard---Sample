{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/dynamic-dashboard/src/components/AddWidgetModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tabs, Tab, List, ListItem, ListItemText, Checkbox, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddWidgetForm = ({\n  onConfirm,\n  onCancel\n}) => {\n  _s();\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [selectedWidgets, setSelectedWidgets] = useState([]);\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const handleToggle = widget => () => {\n    const currentIndex = selectedWidgets.indexOf(widget);\n    const newChecked = [...selectedWidgets];\n    if (currentIndex === -1) {\n      newChecked.push(widget);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setSelectedWidgets(newChecked);\n  };\n  const widgetCategories = [{\n    label: 'CSPM',\n    widgets: ['Cloud Accounts', 'Cloud Account Risk Assessment']\n  }, {\n    label: 'CWPP',\n    widgets: ['Top 5 Namespace Specific Alerts', 'Workload Alerts']\n  }, {\n    label: 'Image',\n    widgets: ['Image Risk Assessment', 'Image Security Issues']\n  }, {\n    label: 'Ticket',\n    widgets: ['Open Tickets', 'Resolved Tickets']\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: selectedTab,\n      onChange: handleTabChange,\n      variant: \"fullWidth\",\n      sx: {\n        marginBottom: 2\n      },\n      children: widgetCategories.map((category, index) => /*#__PURE__*/_jsxDEV(Tab, {\n        label: category.label\n      }, category.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: widgetCategories[selectedTab].widgets.map(widget => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: handleToggle(widget),\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: selectedWidgets.indexOf(widget) !== -1,\n          tabIndex: -1,\n          disableRipple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, widget, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onCancel,\n        sx: {\n          mr: 2\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => onConfirm(selectedWidgets),\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AddWidgetForm, \"2XmnZc0xyHqMpynCV6UnR3U2kCQ=\");\n_c = AddWidgetForm;\nexport default AddWidgetForm;\nvar _c;\n$RefreshReg$(_c, \"AddWidgetForm\");","map":{"version":3,"names":["React","useState","Tabs","Tab","List","ListItem","ListItemText","Checkbox","Button","Box","jsxDEV","_jsxDEV","AddWidgetForm","onConfirm","onCancel","_s","selectedTab","setSelectedTab","selectedWidgets","setSelectedWidgets","handleTabChange","event","newValue","handleToggle","widget","currentIndex","indexOf","newChecked","push","splice","widgetCategories","label","widgets","sx","padding","width","children","value","onChange","variant","marginBottom","map","category","index","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","checked","tabIndex","disableRipple","primary","display","justifyContent","mt","mr","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/dynamic-dashboard/src/components/AddWidgetModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tabs, Tab, List, ListItem, ListItemText, Checkbox, Button, Box } from '@mui/material';\n\nconst AddWidgetForm = ({ onConfirm, onCancel }) => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [selectedWidgets, setSelectedWidgets] = useState([]);\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  const handleToggle = (widget) => () => {\n    const currentIndex = selectedWidgets.indexOf(widget);\n    const newChecked = [...selectedWidgets];\n\n    if (currentIndex === -1) {\n      newChecked.push(widget);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setSelectedWidgets(newChecked);\n  };\n\n  const widgetCategories = [\n    { label: 'CSPM', widgets: ['Cloud Accounts', 'Cloud Account Risk Assessment'] },\n    { label: 'CWPP', widgets: ['Top 5 Namespace Specific Alerts', 'Workload Alerts'] },\n    { label: 'Image', widgets: ['Image Risk Assessment', 'Image Security Issues'] },\n    { label: 'Ticket', widgets: ['Open Tickets', 'Resolved Tickets'] },\n  ];\n\n  return (\n    <Box sx={{ padding: 2, width: '100%' }}>\n      <Tabs\n        value={selectedTab}\n        onChange={handleTabChange}\n        variant=\"fullWidth\"\n        sx={{ marginBottom: 2 }}\n      >\n        {widgetCategories.map((category, index) => (\n          <Tab key={category.label} label={category.label} />\n        ))}\n      </Tabs>\n\n      <List>\n        {widgetCategories[selectedTab].widgets.map((widget) => (\n          <ListItem key={widget} button onClick={handleToggle(widget)}>\n            <Checkbox\n              checked={selectedWidgets.indexOf(widget) !== -1}\n              tabIndex={-1}\n              disableRipple\n            />\n            <ListItemText primary={widget} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\n        <Button\n          variant=\"outlined\"\n          onClick={onCancel}\n          sx={{ mr: 2 }}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => onConfirm(selectedWidgets)}\n        >\n          Confirm\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddWidgetForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}